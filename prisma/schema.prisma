// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Defined schemea
// Goes here

model Template {
  // Identifiers & references
  id         Int     @id @default(autoincrement())
  route      String  @unique
  accountId  String?
  categoryId Int
  tags       Tag[]

  // User Identity
  userId String

  // Actual template
  title   String
  summary String
  body    String // The actual email template body, storing it as string.

  // AI
  aiTones String

  // Moderation
  rejected   String?
  rejectedBy String?

  // Meta
  views Int @default(0)

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category Category  @relation(fields: [categoryId], references: [id])
  comments Comment[]
  votes    Vote[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  description String

  createdAt DateTime @default(now())

  templates Template[]
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique

  createdAt DateTime @default(now())

  userId String

  templates Template[]
}

model Comment {
  // Identifiers & references
  id         Int    @id @default(autoincrement())
  templateId Int
  userId     String

  content String

  // Moderation
  reviewedAt DateTime?
  reviewedBy String?

  createdAt DateTime @default(now())

  template Template @relation(fields: [templateId], references: [id])
}

model Vote {
  id         Int    @id @default(autoincrement())
  templateId Int
  userId     String

  createdAt DateTime @default(now())

  template Template @relation(fields: [templateId], references: [id])

  @@unique([templateId, userId])
}
